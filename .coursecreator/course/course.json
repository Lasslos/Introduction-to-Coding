{
  "course_version" : 1,
  "summary" : "This is an introductory Kotlin course.\n- The course will be most beneficial for beginner-level Kotlin learners.\n- The course covers core Kotlin features.\n- It contains hands-on examples of Kotlin code implementation and exercises to practice new skills.\n- The course is based on the author's personal experience in Kotlin development.",
  "title" : "Introduction to Coding",
  "programming_language" : "kotlin",
  "language" : "en",
  "course_type" : "Marketplace",
  "items" : [
    {
      "id" : 1874513021,
      "title" : "Hello World",
      "task_list" : [
        {
          "id" : 1359355095,
          "name" : "hello-world",
          "files" : {
            "test/output.txt" : {
              "name" : "test/output.txt",
              "placeholders" : [ ],
              "is_visible" : false,
              "text" : "ZBLXxCUrVIxpjgD6SKx4AQ=="
            },
            "src/Main.kt" : {
              "name" : "src/Main.kt",
              "placeholders" : [
                {
                  "offset" : 17,
                  "length" : 24,
                  "possible_answer" : "8O6WvlXiuLi1UV/5g2eCg3ZkIxUT/4yXj3VhXWcOt0Y=",
                  "placeholder_text" : "/* Add your code here */"
                }
              ],
              "is_visible" : true,
              "text" : "NDA7NYDJ4pT3F7ChgC7OnRScOVyGtT8IVVopDVPp7YZK3eP4FhJ5auCO53KZPDcA"
            }
          },
          "description_text" : "<html>\r\n<h2>Hello World</h2>\r\n\r\n<p>\r\n    This is an introductory course to the Kotlin Programming Language, made by Laslo Hauschild.\r\n    It is meant for absolute beginners.\r\n</p>\r\n<p>\r\n    Kotlin uses the <strong>Java Virtual Machine</strong> to run its code.\r\n    That means, everything that works with Java works with Kotlin.\r\n    Kotlin is the <strong>better Java</strong>. In 2016, Google announced to replace Java\r\n    with Kotlin as the preferred language for Android App Development. And its usage go much further.\r\n</p>\r\n<p>\r\n    Your very first program will do the following: Output <strong>Hello World</strong>\r\n    in the console. Use the hints below as instructions.\r\n</p>\r\n<div class=\"hint\"><pre><code>\r\n    fun main {\r\n    &nbsp;&nbsp;//Your code goes here.\r\n    }\r\n</code></pre></div>\r\n\r\n<div class=\"hint\">\r\n  Use <code>println(\"Your text here\")</code> to output something to the console.\r\n</div>\r\n<div class=\"hint\">\r\n    Use the Check-Button below to check your answer\r\n</div>\r\n</html>",
          "description_format" : "HTML",
          "task_type" : "output"
        },
        {
          "id" : 2031844482,
          "name" : "How this course works",
          "files" : {
            "src/Task.kt" : {
              "name" : "src/Task.kt",
              "placeholders" : [ ],
              "is_visible" : true,
              "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>How this course works</h2>\r\n\r\n<p>This course is made for absolute beginners. There will be different types of lessons.\r\nThere will be two types of tasks: Theory and Exercise</p>\r\n\r\n<ul>\r\n    <li>\r\n        <strong>Theory:</strong> Instead of reading the description, it should be taught by an experienced programmer.\r\n        Always code along! That means that you always should try out, how something shown to you works.\r\n        <strong>Instead of asking what if questions, try it yourself and then ask or make a comment!</strong>\r\n    </li>\r\n    <li><strong>Edu:</strong> Coding exercise that is validated by tests. It starts with a\r\n    <strong>custom function.</strong> These functions will get some information and return some information.</li>\r\n</ul>\r\n\r\n<p>What are custom functions?</p>\r\n<p>Almost every code in Kotlin executes in <strong>functions</strong>. This is a function:</p>\r\n<pre><code>\r\n    fun name(input: Int): String {\r\n\r\n    }\r\n</code></pre>\r\n<p>\r\n    Lets break that apart. <br>\r\n    <code>fun</code> is a <strong>keyword</strong>. It tells the computer that this is a function.<br>\r\n    <code>name</code> is the <strong>name</strong> of the function. It can be anything. <br>\r\n    <code>(input: Int)</code> This is the section of the function that declares what the input\r\n    will be. Every time the function is executed, my tests will give you a values that\r\n    you don't know. But what exactly does it mean?\r\n</p>\r\n<p>\r\n    <code>input</code> is just the name. It can be anything and will normally be something meaningful\r\n    that makes sense in the context. <br>\r\n    <code>: Int</code> is the type of data that will be in the variable. What exactly the different data types\r\n    are is not important right now.\r\n</p>\r\n<p>Last but not least, there is <code>: String </code> at the end of the function. This is, again,\r\n<strong>a type of data</strong>. Here, it is the type of data that the function result should be.\r\n    This result is \"returned\" by: <code>return \"result\"</code>\r\n</p>\r\n</html>",
          "description_format" : "HTML",
          "task_type" : "theory"
        }
      ],
      "type" : "lesson"
    },
    {
      "id" : 522520431,
      "title" : "Strings",
      "task_list" : [
        {
          "id" : 248037816,
          "name" : "Strings",
          "files" : {
            "src/Main.kt" : {
              "name" : "src/Main.kt",
              "placeholders" : [ ],
              "is_visible" : true,
              "text" : "r78sGZKn2sJUsa1f9cbzwuE26Lb2O8BdwhbQAC11W/o="
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>Theory: First Data Type: Text</h2>\r\n\r\n<p><strong>Text</strong> is arguably one of the most important data types. Its name is <strong>String</strong>\r\nin almost all programming languages. Create a string by placing some text into <strong>quotation marks.</strong></p>\r\n<p>\r\n    <code>\"This is a String!\"</code>\r\n</p>\r\n<p>You can output this String by wrapping it into a print statement: <br>\r\n    <code>println(\"This is a String!\")</code> <br>\r\n    We will not use that a lot.\r\n</p>\r\n<p>Instead, we will use <code>return \"This is a String\"</code>, since most of the output you make is checked by tests.\r\n    Testing, however, is not easily possible when the output is displayed. That is why <code>return</code>, which\r\npasses the value to a method, in this case a testing method, will be used more</p>\r\n\r\n</html>",
          "description_format" : "HTML",
          "task_type" : "theory"
        },
        {
          "id" : 1070556237,
          "name" : "Greet the User",
          "files" : {
            "src/Task.kt" : {
              "name" : "src/Task.kt",
              "placeholders" : [
                {
                  "offset" : 38,
                  "length" : 28,
                  "possible_answer" : "9RkplBvBJ21/G8UYLokDIA==",
                  "placeholder_text" : "/* Put your solution here */"
                }
              ],
              "is_visible" : true,
              "text" : "UkSFbq2F3NsHnbp7UARJuHtURoB30MHMPmeU369G4Kr9ZfSmXavs3XXCPGbjLtgS3A1HByXTcpbqmjPHV4fBFQDHCGhsDhPm7jktGcptP/I="
            },
            "test/Tests.kt" : {
              "name" : "test/Tests.kt",
              "placeholders" : [ ],
              "is_visible" : false,
              "text" : "ITs8Nv8EH6QWJG5nufD7nCbrLPoZNTYAX8EbQHppKy+TR7uFhZF7JnSL5/nnFJttOoUbKzjzjKMy0T1IKOzzSKcmYN6vttO2VYkO4mltId6WciCGOni1wblBCwRfrDQuV1Bf+LWMt0kym1ftrOCbDaJm+tJZV3EjmNc2XhlDItZuFyyz5qHzF/XwCaZE+fpies1O8467WrpX77quEClZo8i4pmNUGlq6DNRGOITSf+7yMlT8q28cmjh8E5F8GZtfwT8JSN4mJkwVg4KCEL64ebsIXhDq7xirlSqax8necv0OouA9PdTnS7iXrXHK71K5j13Gp5nNz+vLmZfrtfuDdR8eFwe/MFNWvWnGlY5IqpxrNMiGFunqYVh9SFuXUqvih1PqID6/p1fNa9aBFRuMItW5nTtr5RqFEHiaoI7/Y58IaUrGM73fKYmo7IwNBa/L/qp8B26OBTW3NVP/lTRybM80ZpZq+HzdYQFoXRe9CbgBzFIxCSl0I2+fX6cwZebv8LHzlMQ6mZnva68aLyuaIrTomIwH6gdxYmCCjMIr592nB5iPaTvIxlD01bWwgnjcwmNpyOvR+3wumw4KhgB1oZPjcnP5RYLtyXij+cuUYfA9o2GCcZj826rrJcNJLdrLwIcySFEeB5EYd+CZ227YgKliCw0PN7rNonP6RVT2yTPlq6TxWCeAywBUa1gRzUVw"
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>Task: Greet the user</h2>\r\n\r\n<p>You are given a name of a user. Greet the user by returning the users name.</p>\r\n\r\n<div class=\"hint\">\r\n  String = Text\r\n</div>\r\n<div class=\"hint\">\r\n  Return something by using the keyword <code>return [value]</code>\r\n    Replace <code>[value]</code> with a variable.\r\n</div>\r\n<div class=\"hint\">\r\n  Use <code>return name</code> to greet the user.\r\n</div>\r\n\r\n\r\n\r\n</html>",
          "description_format" : "HTML",
          "task_type" : "edu"
        },
        {
          "id" : 805420555,
          "name" : "String Templates",
          "files" : {
            "src/Main.kt" : {
              "name" : "src/Main.kt",
              "placeholders" : [ ],
              "is_visible" : true,
              "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>Theory: String Templates</h2>\r\n\r\n<p>This was pretty boring, right? Nobody would ever greet someone just with their name.\r\nThat is why we need to combine the name with more text. Here is how it works:</p>\r\n<code>\"Hello, $name!\"</code>\r\n<p>We use \\$ to refer to a variable.\r\n    When this code is executed, the $ will be replaced by the value in the variable.</p>\r\n</html>",
          "description_format" : "HTML",
          "task_type" : "theory"
        },
        {
          "id" : 1470679331,
          "name" : "Greeting 2.0",
          "files" : {
            "src/Task.kt" : {
              "name" : "src/Task.kt",
              "placeholders" : [
                {
                  "offset" : 38,
                  "length" : 24,
                  "possible_answer" : "qOYCHpbFQkFHoY7PUj6fnwN0nrr+b9PbYuFpWhv20PlJukpznuBjqkf9cBSYgLsN",
                  "placeholder_text" : "/* Add your code here */"
                }
              ],
              "is_visible" : true,
              "text" : "UkSFbq2F3NsHnbp7UARJuHtURoB30MHMPmeU369G4Kp+i26vWjcMa9JOPm/a1LSDpI1hK5IfMh3CpgvHVYKm1a3MnWNaWHJZ3pAhFEJbRqA="
            },
            "test/Tests.kt" : {
              "name" : "test/Tests.kt",
              "placeholders" : [ ],
              "is_visible" : false,
              "text" : "ITs8Nv8EH6QWJG5nufD7nCbrLPoZNTYAX8EbQHppKy+TR7uFhZF7JnSL5/nnFJttOoUbKzjzjKMy0T1IKOzzSKcmYN6vttO2VYkO4mltId6WciCGOni1wblBCwRfrDQu44xwS7H5bK3ZhiC1YyOnDLP67SytmiBmHm7Ye1fFnvlxxv+XszW7ty4bxHCdEyC7LdMPPDKZIOKz1nctegyIVOynfyDoovLAJx4bJ+TpZwnQLaK+aqkceSb0gVGc6IohEbbbNetwpLcbkuBkVbAIYXlJPlMVIXKM1WpHNTId6lXwcv+62yBU9TstxNLmMouaPxrKJzLk1h9V0QPZH0IS+ql6KM9jYB9MlH2dAyEmPCEWLcRbKUL0XCkNXnHAU+gQdSkrUES72sPwWPeouc38eJbDksv4ShCHA3gxbqRABgfbYazPFM9LNobRJUTgfAyLSTKmvaI6/jnPDv/HoRBA6E5a1HWFGlMWMETSfRASwPiS89zHvEeMypVQmyHka7MfoiAE/64GxEcFxw1oTfsKjhBmNbtyQ0H5CQOfNQeAnBI="
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>Task: Greeting 2.0</h2>\r\n\r\n<ul>\r\n    <li>You are given a name.</li>\r\n    <li>Greet the user like this: <code>\"Hello, [user]! How are you?\"</code></li>\r\n</ul>\r\n</html>",
          "description_format" : "HTML",
          "task_type" : "edu"
        }
      ],
      "type" : "lesson"
    },
    {
      "id" : 2089264630,
      "title" : "If-Statement",
      "task_list" : [
        {
          "id" : 1535960522,
          "name" : "Check a condition",
          "files" : {
            "src/Main.kt" : {
              "name" : "src/Main.kt",
              "placeholders" : [ ],
              "is_visible" : true,
              "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>Theory: Check a condition.</h2>\r\n<p>Almost every program wants to do something when certain conditions apply. In Kotlin, we do the following:</p>\r\n<pre><code>\r\n    if (condition) {\r\n        //Do stuff\r\n    }\r\n</code></pre>\r\n<p>All the code inside the curly brackets will only run when the condition is true.</p>\r\n<p>A valid if-statement is for example:</p>\r\n<pre><code>\r\n    if (name == \"Joe\") {\r\n        println(\"Mama\")\r\n    }\r\n</code></pre>\r\n<p>Lets break this down again.</p>\r\n<p><code>input == \"Joe\"</code> checks if the input <strong>is equal to</strong> \"Joe\"</p>\r\n<p>If that is the case, it will print \"Mama\"</p>\r\n</html>",
          "description_format" : "HTML",
          "task_type" : "theory"
        },
        {
          "id" : 1723922774,
          "name" : "Greeting 3.0",
          "files" : {
            "src/Main.kt" : {
              "name" : "src/Main.kt",
              "placeholders" : [
                {
                  "offset" : 38,
                  "length" : 27,
                  "possible_answer" : "FurrsZK8f1If/7iI//L/IUVxeMsWyVNn1doCfmwAMDCU1WyQ7iXg5DEOanF6oAeiMwsXxaAF+yAJKP3dBFR/8HSss+sq9pPUSRDq6OYfVx2z8/HAMsSXDII5dF2boP7I",
                  "placeholder_text" : "/* Put you solution here */"
                }
              ],
              "is_visible" : true,
              "text" : "UkSFbq2F3NsHnbp7UARJuHtURoB30MHMPmeU369G4Kr9ZfSmXavs3XXCPGbjLtgSXeDFPfUe7JBl3gCg2r6Apqw3y2q/JHkc6fst2+hyM7A="
            },
            "test/Tests.kt" : {
              "name" : "test/Tests.kt",
              "placeholders" : [ ],
              "is_visible" : false,
              "text" : "ITs8Nv8EH6QWJG5nufD7nCbrLPoZNTYAX8EbQHppKy+TR7uFhZF7JnSL5/nnFJttOoUbKzjzjKMy0T1IKOzzSKcmYN6vttO2VYkO4mltId6WciCGOni1wblBCwRfrDQuDaStb8yPzcQNiUfpjU9XjjWvI3gHy+iG4ejZSyD9trQhVgSiwblpcAVfmMH7CGSoEc3QTKY4Jn4NbKg3cW4rE6IBJbzVUrgiOijhqpQl+YlOuKKTqDJaeIH53yj4JzQR7QXDbubFiPZUPDC2LkO7BaTeh9JWT4nVopHOAeA7SivzeGUH6v/WBFxTAdkbCF+AfCWdxw6iHGA4M/mZEvVGhA+h6vvYta4nYQCayIPkkJXOcbmh+yY/6T06GxCyeXDwzwntOW2ETI7BfZUGqkKtFTbPvn/DoQLpLm/z/Bd1swwJcc0qJpvD4cztrWLOz/a/Yq4INOB1I+w1AM4kIU95+hCCmizdbXG02fZtGPdKGD+N9GpYiKPedB/m/KR7g2+YwiVhD+JfA+SyTywxq+it8yAudpzJ9GGp8pakc5pnGbObU9ftAInmd/ir+NgVBHtT+d4bYByg/RlsSeiDsNRYZftXe/l2ALiEQjhUA3kU1dM="
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>Task: Greeting 3.0</h2>\r\n\r\n<ul>\r\n    <li>Greet the user.</li>\r\n    <li>If the name is Mr. Treber, return \"Good morning sir!\"</li>\r\n    <li>If that is not the case, return \"Hello there!\"</li>\r\n</ul>\r\n</html>",
          "description_format" : "HTML",
          "task_type" : "edu"
        },
        {
          "id" : 1999689084,
          "name" : "And, Or, Not, Else,",
          "files" : {
            "src/Main.kt" : {
              "name" : "src/Main.kt",
              "placeholders" : [ ],
              "is_visible" : true,
              "text" : "r78sGZKn2sJUsa1f9cbzwuE26Lb2O8BdwhbQAC11W/o="
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>And, Or, Not, Else</h2>\r\n\r\n<p>Often, we want to check if two conditions are true at the same time. <br>\r\n    To do that, we use the operator <strong>and</strong>. It works like that:\r\n</p>\r\n<pre><code>\r\n    if (oneCondition && anotherCondition) {\r\n        //Only runs when both are true\r\n    }\r\n</code></pre>\r\n\r\n<p>Similarly, there is <strong>or</strong>:</p>\r\n<pre><code>\r\n    if (oneCondition || anotherCondition) {\r\n        //Only runs when at least one of them is true\r\n    }\r\n</code></pre>\r\n<p>When you want to run something unless the condition is true, use <strong>not</strong>:</p>\r\n<pre><code>\r\n    if (!oneCondition) {\r\n        //Only runs when one condition is not true\r\n    }\r\n</code></pre>\r\n<p>Probably the most important feature is the keyword <strong>else</strong>:</p>\r\n<pre><code>\r\n    if (oneCondition) {\r\n        //Run stuff\r\n    } else if (anotherCondition) {\r\n        //Only runs when oneCondition doesn't apply but anotherCondition does\r\n    } else {\r\n        //Only runs as a \"fallback\", when both conditions don't apply.\r\n    }\r\n</code></pre>\r\n<p>Both the <code>else if</code> and <code>else</code> block are optional in an if-statement.</p>\r\n</html>",
          "description_format" : "HTML",
          "task_type" : "theory"
        },
        {
          "id" : 1075423882,
          "name" : "Greeting 4.0",
          "files" : {
            "src/Task.kt" : {
              "name" : "src/Task.kt",
              "placeholders" : [ ],
              "is_visible" : true,
              "text" : "NDA7NYDJ4pT3F7ChgC7OnferQh7YfJ3P/IbTMFgUNW/1YqmPCQAstf8F3+Bh8xvEa7wyfZ1iNq2EwADk99DnHRiOzF1kS9PDAe4qRFfbvI7jvqacRjyaHXRsnhA7dCl2x7Aly3hnvajTdDqZlSRDSYZ/9EuejT6IwtIbO4CfAZq1ciP9Es9h4ooCrCcVDytmFSH7CoHKu0kn6w2DMbgOhaIxhiyV4C/l4+CLm1g+s4MUSf26wjqVhmNiraBKWnqY4l+bgToDn6zy/jGkpMCpmpne+Lv8czJ6MPmQxkJG126Q6nwXBdRPF1iEiXqbnN6JtR+mQcTNjYpt6lwbhMuBLFQbNvbiHxEGwXvyl6k48rrbkbm2SLT6+Y9aeL6ki5DGyJovh8wbkH0gNL3OCxC2O3kV+zB3dG/zJQzef8TOcLw1s8dBhxIZge0SAwVqdARHBfioL5OQtFXVH8fmNUny+XNNzcvNHg9xbN9kSPE0atn8g1VUTXmHTpmQ/UfBQsxaNyZQ4W/Lfav9WudX+xPkZw=="
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>Greeting 4.0</h2>\r\n\r\n<h5>Please ignore the message: \"Cascade 'if' should be replaced with 'when'.\"\r\nYou will learn that soon enough.</h5>\r\n<ul>\r\n    <li>Write a program that asks a person for their name.</li>\r\n    <li>If the name is Mr. Treber or Mr. Dolgopol, then return \"Good morning sir!\"</li>\r\n    <li>If the name is Joe, respond \"Mama!\"</li>\r\n    <li>If the name is Google Assistant, greet it with \"Hey Google!\"</li>\r\n    <li>If the name is not theirs, return \"Hello there!\"</li>\r\n</ul>\r\n</html>",
          "description_format" : "HTML",
          "task_type" : "theory"
        }
      ],
      "type" : "lesson"
    },
    {
      "id" : 1517477371,
      "title" : "Integers",
      "task_list" : [
        {
          "id" : 493681017,
          "name" : "introduction",
          "files" : {
            "src/Main.kt" : {
              "name" : "src/Main.kt",
              "placeholders" : [
                {
                  "offset" : 17,
                  "length" : 28,
                  "possible_answer" : "sP+ospqS1mq5l2Z5OUe7og==",
                  "placeholder_text" : "/*Write your own code here*/"
                }
              ],
              "is_visible" : true,
              "text" : "NDA7NYDJ4pT3F7ChgC7OnQYHtnCrCfDV6ZvoxRVx5jV9EeEIJXPfsPbXEK8brNk51rblsl8L1J1HoXuhJXJxtw=="
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>Theory: Numbers</h2>\r\n\r\n<p>Numbers are a bit more tricky in Kotlin, since there is not \"the data type\" for numbers.\r\nActually, there is a couple:</p>\r\n<table class=\" wide\" id=\"ed75d3e9\"><thead><tr class=\"ijRowHead\" id=\"fca3254e\"><th id=\"342c10b\"><p class=\"article__flow-element article__flow-element--with-nesting\">Type</p></th><th id=\"804d1ff3\"><p class=\"article__flow-element article__flow-element--with-nesting\">Size (bits)</p></th><th id=\"776af2ca\"><p class=\"article__flow-element article__flow-element--with-nesting\">Min value</p></th><th id=\"4ba4c7dd\"><p class=\"article__flow-element article__flow-element--with-nesting\">Max value</p></th></tr></thead><tbody><tr class=\"\" id=\"6352c315\"><td id=\"ca932b7e\"><p class=\"article__flow-element article__flow-element--with-nesting\"><code class=\"code \">Byte</code></p></td><td id=\"536e3a73\"><p class=\"article__flow-element article__flow-element--with-nesting\">8</p></td><td id=\"59b3978c\"><p class=\"article__flow-element article__flow-element--with-nesting\">-128</p></td><td id=\"af3d2ff8\"><p class=\"article__flow-element article__flow-element--with-nesting\">127</p></td></tr><tr class=\"\" id=\"195d6f63\"><td id=\"a1ed331f\"><p class=\"article__flow-element article__flow-element--with-nesting\"><code class=\"code \">Short</code></p></td><td id=\"6484e695\"><p class=\"article__flow-element article__flow-element--with-nesting\">16</p></td><td id=\"fe3f2ceb\"><p class=\"article__flow-element article__flow-element--with-nesting\">-32768</p></td><td id=\"c3a4382e\"><p class=\"article__flow-element article__flow-element--with-nesting\">32767</p></td></tr><tr class=\"\" id=\"86e0f138\"><td id=\"3827e093\"><p class=\"article__flow-element article__flow-element--with-nesting\"><code class=\"code \">Int</code></p></td><td id=\"e0b1bdcd\"><p class=\"article__flow-element article__flow-element--with-nesting\">32</p></td><td id=\"99e05fe\"><p class=\"article__flow-element article__flow-element--with-nesting\">-2,147,483,648 (-2 <sup class=\"superscript\" id=\"abfb177b\">31</sup>)</p></td><td id=\"208de644\"><p class=\"article__flow-element article__flow-element--with-nesting\">2,147,483,647 (2 <sup class=\"superscript\" id=\"2278f9f3\">31</sup>- 1)</p></td></tr><tr class=\"\" id=\"8bd7133f\"><td id=\"85f0bda6\"><p class=\"article__flow-element article__flow-element--with-nesting\"><code class=\"code \">Long</code></p></td><td id=\"81a9927d\"><p class=\"article__flow-element article__flow-element--with-nesting\">64</p></td><td id=\"de496353\"><p class=\"article__flow-element article__flow-element--with-nesting\">-9,223,372,036,854,775,808 (-2 <sup class=\"superscript\" id=\"3b8c1302\">63</sup>)</p></td><td id=\"dfce25e3\"><p class=\"article__flow-element article__flow-element--with-nesting\">9,223,372,036,854,775,807 (2 <sup class=\"superscript\" id=\"f8918999\">63</sup>- 1)</p></td></tr></tbody></table>\r\n<p>Normally, we use <strong>int</strong>, unless a bigger number needs to be represented. Byte and Short is really\r\njust an artifact from years ago. Just be aware that these can be numbers.</p>\r\n<p>However, these types do not represent decimal spots. For that, we use:</p>\r\n<table class=\" wide\" id=\"85971717\"><thead><tr class=\"ijRowHead\" id=\"812612b4\"><th id=\"ca2d9fba\"><p class=\"article__flow-element article__flow-element--with-nesting\">Type</p></th><th id=\"3e71830f\"><p class=\"article__flow-element article__flow-element--with-nesting\">Size (bits)</p></th><th id=\"fbef114b\"><p class=\"article__flow-element article__flow-element--with-nesting\">Significant bits</p></th><th id=\"bb4f599e\"><p class=\"article__flow-element article__flow-element--with-nesting\">Exponent bits</p></th><th id=\"22066318\"><p class=\"article__flow-element article__flow-element--with-nesting\">Decimal digits</p></th></tr></thead><tbody><tr class=\"\" id=\"2f3828a9\"><td id=\"bb85c38e\"><p class=\"article__flow-element article__flow-element--with-nesting\"><code class=\"code \">Float</code></p></td><td id=\"b04bb63d\"><p class=\"article__flow-element article__flow-element--with-nesting\">32</p></td><td id=\"71c06df2\"><p class=\"article__flow-element article__flow-element--with-nesting\">24</p></td><td id=\"d17477f5\"><p class=\"article__flow-element article__flow-element--with-nesting\">8</p></td><td id=\"da23f4bc\"><p class=\"article__flow-element article__flow-element--with-nesting\">6-7</p></td></tr><tr class=\"\" id=\"63f146c9\"><td id=\"6c728b9a\"><p class=\"article__flow-element article__flow-element--with-nesting\"><code class=\"code \">Double</code></p></td><td id=\"c1c320e7\"><p class=\"article__flow-element article__flow-element--with-nesting\">64</p></td><td id=\"83bb594d\"><p class=\"article__flow-element article__flow-element--with-nesting\">53</p></td><td id=\"aae48b61\"><p class=\"article__flow-element article__flow-element--with-nesting\">11</p></td><td id=\"fddceb89\"><p class=\"article__flow-element article__flow-element--with-nesting\">15-16</p></td></tr></tbody></table>\r\n<p>Again, Float is not used anymore. </p>",
          "description_format" : "HTML",
          "task_type" : "theory"
        },
        {
          "id" : 1820742813,
          "name" : "math",
          "files" : {
            "src/Main.kt" : {
              "name" : "src/Main.kt",
              "placeholders" : [
                {
                  "offset" : 17,
                  "length" : 19,
                  "possible_answer" : "gUF5N0IW3Mp7x+q501UV/0hTlenlewndF2Nnuaz0Hucgcxz9xxsC0+6hYT4E878KmPNCxX9IFS9CYvVsRy9rG8B8cYlgsvUlltZtYMSYne9RNATYRlX8T4V5KLYH7fhH0qry8nfYlWapbScvh7fvGFy8Vf3Q4A8aFtdjZT7f8/8=",
                  "placeholder_text" : "/*Try it out here*/"
                }
              ],
              "is_visible" : true,
              "text" : "NDA7NYDJ4pT3F7ChgC7OnSijbt/zW3FAHWqMHxV1ZeFWuBl3JctCswh+jImUnzbP"
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>Math with Kotlin</h2>\r\n\r\n<p>\r\n    Try to do simple addition. How does it work?\r\n</p>\r\n<div class=\"hint\">\r\n    Use <strong>+</strong> to do addition.\r\n</div>\r\n<p>\r\n    Try to do the same with subtraction.\r\n</p>\r\n<div class=\"hint\">\r\n    Use <strong>-</strong> to do subtraction.\r\n</div>\r\n<p>\r\n    Try out multiplication. If you can't figure out what symbol is used, feel free to use the hint.\r\n</p>\r\n<div class=\"hint\">\r\n    Use <strong>*</strong> to do multiplication.\r\n</div>\r\n<p>\r\n    Division? Pay attention if it rounds, and if yes up or down? What happens if you\r\n    replace something like <strong>3 / 2</strong> by <strong>3.0 / 2.0</strong>\r\n</p>\r\n<div class=\"hint\">\r\n    Use <strong>/</strong> to do division with only integers or only doubles. Then try to mix both of them.\r\n    while a Double also <strong>supports decimal places</strong>.\r\n    When doing an Integer Division, Kotlin will always <strong>round down.</strong>\r\n</div>\r\n<p>\r\n    Does Kotlin follow <strong>BEDMAS?</strong> Does it support <strong>( or ) ?</strong> Try it out!\r\n</p>\r\n<div class=\"hint\">\r\n    Kotlin follows the <strong>BEDMAS</strong> rules. That also means you can use <strong>( and )</strong>.\r\n</div>",
          "description_format" : "HTML",
          "task_type" : "theory"
        },
        {
          "id" : 1640427133,
          "name" : "From 12 to 24 Hour Clock",
          "files" : {
            "src/Main.kt" : {
              "name" : "src/Main.kt",
              "placeholders" : [
                {
                  "offset" : 17,
                  "length" : 26,
                  "possible_answer" : "XfTZN5M5TY1785o7f3lbJ86KyB5kw6a3UwQPMs3N3ZSA/2GG4NIkmnfF5ejwo5WksVmtTxW6WdQVBitPu7imR+b4L6gdaLe9FVqdjCe5KdyectyWc8dJK1K3aREHK9MaLt/BxKJFbaDwDb+TxYC8skB7RwIdpXxHvB84r0LeyRT8e3WTt5AbEYPL4TI1etAxk40uB+LBklOk5Tc7yGA72JVd6ZfgGOjS2fLe73CxsomNydo16BXGOvqsDM+fyM/m2m7N22EpsVf+MegchxoXiTz4qFsqIPvRMiRuN4t8vdTS+Zlk+22S66yuaapCkG8gZ375EKwBYkg3SkoyfnQGiRLNAMGzn9HLMnIj/QeX1/738kpz89i77rpTWBCaR+RVEdzl51OPoPT5y4WHlqGzxdFpE+P/Tq1TD4V6u7q9bwwm3i5QeFL6x9/Z60gciiEhe2lgqrYEBzYqaNKtOGEiUKbjOwsCZ5MdWDaLFV1PzzcNGblqUoaqUnyynYA/Wu9HstnrjdoYmAE+QtyA9zZ3y6ehvXE25UfHYR7fGI/HNlhvWzZ5gmVjyK0LRijyTf7kq7mrqiCInlpSRtlRpIbdC3u0QOdMKgTTzZqsm9tKQAU=",
                  "placeholder_text" : "/* Put your answer here */"
                }
              ],
              "is_visible" : true,
              "text" : "NDA7NYDJ4pT3F7ChgC7OnZLHUtavX+Zq8VMxFNmYVWEuTh4cMDSi55UEj/pct+OD"
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>12-Hour Clock, 24-Hour Clock</h2>\r\n\r\n<ul>\r\n    <li>Ask the user for the hour</li>\r\n    <li>If it's smaller than zero or bigger than 12, tell the user that their input is not valid and end\r\n    the execution with <strong>return</strong></li>\r\n    <li>Ask the user for AM or PM</li>\r\n    <li>If the user enters something that is not either AM or PM, tell the user that their input is not\r\n    valid and ent the execution with <strong>return</strong></li>\r\n    <li>Tell the user what time that is in 24-Hour-Clock</li>\r\n</ul>\r\n<div class=\"hint\">\r\n  When it's currently AM, the hour on a 24-Hour clock is the same as on a 12-Hour clock <br>\r\n    When it's currently PM, the hour on a 24-Hour Clock is exactly 12 bigger than on a 12-Hour clock\r\n</div>\r\n</html>",
          "description_format" : "HTML",
          "task_type" : "theory"
        },
        {
          "id" : 548364198,
          "name" : "comparison",
          "files" : {
            "src/Main.kt" : {
              "name" : "src/Main.kt",
              "placeholders" : [
                {
                  "offset" : 17,
                  "length" : 19,
                  "possible_answer" : "bToDJ0vnuimfoINfagW5Ug==",
                  "placeholder_text" : "/*Try it out here*/"
                }
              ],
              "is_visible" : true,
              "text" : "NDA7NYDJ4pT3F7ChgC7OnSijbt/zW3FAHWqMHxV1ZeG+P7Ot++wKV5/SMSAjjeV0"
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>Compare numbers to each other.</h2>\r\n\r\n<p>Often, we need to compare numbers in if-statements. In Kotlin, we use these operators for it:</p>\r\n<p><strong><</strong> corresponds to <strong>is smaller than.</strong> Examples: 3 < 2 is false. 5 < 16 is true. 7 < 7 is false.</p>\r\n<p><strong>></strong> corresponds to <strong>is bigger than.</strong> Examples: 3 > 2 is true. 5 > 16 is false. 7 > 7 is false.</p>\r\n<p><strong>==</strong> corresponds to <strong>is equal</strong> Examples: 3 == 2 is false. 5 == 16 is false. 7 == 7 is true.</p>\r\n<p><strong><=</strong> corresponds to <strong>is smaller or equal to.</strong> Examples: 3 <= 2 is false. 5 <= 16 is true. 7 <= 7 is true.</p>\r\n<p><strong>>=</strong> corresponds to <strong>is bigger or equal to.</strong> Examples: 3 >= 2 is true. 5 >= 16 is false. 7 >= 7 is true.</p>\r\n<p>Take the time and try to put some of these statements into a print statement. </p>\r\n</html>\r\n\r\n\r\n",
          "description_format" : "HTML",
          "task_type" : "theory"
        }
      ],
      "type" : "lesson"
    },
    {
      "id" : 762822725,
      "title" : "Variables",
      "task_list" : [
        {
          "id" : 1986574201,
          "name" : "Declare Variables",
          "files" : {
            "src/Main.kt" : {
              "name" : "src/Main.kt",
              "placeholders" : [
                {
                  "offset" : 17,
                  "length" : 19,
                  "possible_answer" : "+CGi8633W6A7LUtqalbziQ==",
                  "placeholder_text" : "/*Try it out here*/"
                }
              ],
              "is_visible" : true,
              "text" : "NDA7NYDJ4pT3F7ChgC7OnSijbt/zW3FAHWqMHxV1ZeG+P7Ot++wKV5/SMSAjjeV0"
            }
          },
          "description_text" : "<html>\r\n\r\n<h2>Variables</h2>\r\n<h3>Disclaimer: This lesson should be taught by an experienced programmer.</h3>\r\n<p>The first thing that computers are incredibly good in, is storing data. I am going to show\r\nyou the most convenient way in Kotlin.</p>\r\n<p>Before we store data, we have to understand data types. You already know a few:</p>\r\n<ul>\r\n    <li>String [Text]</li>\r\n    <li>Integer, called Int [Whole numbers]</li>\r\n    <li>Double [Numbers with decimal places]</li>\r\n</ul>\r\n<p><strong>Before you reveal the hints, try to guess how it could work, if you have an idea.\r\nThat way, you learn more efficient.</strong></p>\r\n<p>\r\n    Write a program that begins with a variable with the value\r\n    <strong>\"Hello World\"</strong>.\r\n    Try the following things in the code:\r\n</p>\r\n<ul>\r\n    <li>Print the variable.</li>\r\n    <li>Change the value in it and print it.</li>\r\n    <li>Try to change it to a number and print it.</li>\r\n    <li>Create a new variable with a number in it and do math with it. Use print statements for that.</li>\r\n    <li>Save the output of a calculation in a variable and print it later.</li>\r\n    <li>Compare variables instead of numbers, the same way. Also compare a variable to a number.</li>\r\n\r\n</ul>\r\n<div class=\"hint\">\r\n    How you store data: <br>\r\n    <code>var [name of variable] = [some data]</code><br>\r\n    Example: <br>\r\n    <code>var data = \"Hello World!\"</code>\r\n</div>\r\n<div class=\"hint\">\r\n    You can access the data like that:<br>\r\n    <code>\r\n        var data = \"Hello World\" <br>\r\n        print(data)\r\n    </code>\r\n</div>\r\n<div class=\"hint\">\r\n    You can also specify the type of data to be stored:<br>\r\n    <code>var data: String = \"Hello World!\"</code>\r\n</div>\r\n<div class=\"hint\">\r\n    If you want to change the value, simply reassign the variable:<br>\r\n    <code>data = \"Something else\"</code><br>\r\n    That will delete the previous value in the variable, and put a new value into it.\r\n</div>\r\n<div class=\"hint\">\r\n    There may be some cases where you want a variable to be unchangeable. It also helps to understand the code,\r\n    so try to use this feature as often as possible. <br>\r\n    <code>val moreData = \"This is unmodifiable, because it starts with the keyword val\"</code>\r\n</div>\r\n</html>",
          "description_format" : "HTML",
          "task_type" : "theory"
        }
      ],
      "type" : "lesson"
    },
    {
      "id" : 97467308,
      "title" : "Functions",
      "task_list" : [
        {
          "id" : 516597868,
          "name" : "Functions",
          "files" : {
            "src/Main.kt" : {
              "name" : "src/Main.kt",
              "placeholders" : [ ],
              "is_visible" : true,
              "text" : "NDA7NYDJ4pT3F7ChgC7OnY7PiQg0Z9w3V0uXkpoQ4U1bA82PIPbBUwzzqamNfgOY"
            }
          },
          "description_text" : "<html>\n\n<h2>Functions</h2>\n\n<p>\n    A <strong>functions</strong> is a block of code. It is executed step by step, statement after statement.\n    You already know a function:\n</p>\n<pre><code style=\"display: block;\">\n    fun main() {\n\n    }\n</code></pre>\n<p>However, this is not a very good example of a function, since it leaves out a lot of things that can be done with functions.</p>\n<p>Let's take a look at another example: </p>\n<pre><code style=\"display: block;\">\n    fun printText() {\n\n    }\n</code></pre>\n<p>This is the <strong>main function</strong>. We are going to break it apart to see what we can do with it.</p>\n<p><code>fun</code> -> This is the <strong>keyword</strong> of a function. Every function begins with it.\n    Its purpose is that your computer know what to do with it.</p>\n<p><code>main</code> -> This is the <strong>name</strong> of a function. It can be anything. </p>\n<p><code>()</code> -> This is the <strong>parameter list</strong> of a function. When your function\nneeds to be input in order to run </p>\n</html>",
          "description_format" : "HTML",
          "task_type" : "theory"
        }
      ],
      "type" : "lesson"
    }
  ],
  "additional_files" : [
    {
      "name" : "build.gradle",
      "placeholders" : [ ],
      "is_visible" : true,
      "text" : "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"
    },
    {
      "name" : "settings.gradle",
      "placeholders" : [ ],
      "is_visible" : true,
      "text" : "5xqdKn6NszS9tmNKflAhZPKQvsiKdtkFF7rygCkmbI/iuZ4XNsYjSNgJ4dAz8B6JF90GGtI5YIi+apNf2Vb0gn/2JA94EByI6K11QC1LuKXT/ik+D8qI24b0rYqiEd42zvsr1HvqNAc8XpUG5NwtOeyCIexYCr4rEuHcox3Q2XS5FVQgu5MUZ8OR+yNLLzqPZTbJN/IqdGVCQoTiWtMCjEF7MrMod0iDBSQBP3QC2wF0tMOWggh3ryKnkyZvk1NLI/Cnsc7/2JcLg8LoQUV32MFtyrf5t7Fp9AlRhDSBDhNwZdp2wLG/orO0yFnIWbyGk+UEpZkFxjGSqwmEVwBVzSx/aKIwTzoeBk05GuIT0BVlLPkLs7FpldtSgbzlINhr4gT+QOuAO/ZZMd7Dokc4vo8XpvGel9ei/bpCEB41m504CyAlHZ4eELgUwu+943nvxIkbyDdset8FsSD44azozwT4OlAd2jburLbZvIo2ICzR1iMObwVzvnEWO8Y2VZVZVo/pI59cJnh6MTKn7eFxNwR5zNo45vP28y3nQGTwYqao3vEROQkL++j3pWdoNY2FGgO84E9T4zcTCOAo+p+Mw++IZImoZzj+A8m+eY5HNlhZm3nIfejmnMbYAOSPJ2xRINA5FcLzempu/m/sfFDaMOexGIrgjLGbuT9DYtQK89ZAY/u7EYLIFMyo18Bhs+bDe2lqClWbCzoogxqmG8ZU/WMa+vHrY8DibqT8AOWJXpzvm9RmkNTTQXMhLdT7pXXBsWmxB76UDQ9t6CvaIXHo3YnSdVjvaCSeQzxgj/gY+gvrs5dNAdl63OuSvQEDhAzCDiI8HQDST3B+8AZ13Hr/Q3lqXfqDKTpCzy6XcQJeJpwLYDXLPiS3mkezhukeLynvv5xRLnUldSaa6moqpeOMudb/Hs0epbOzEb2WZbUtCQs="
    }
  ],
  "version" : 12,
  "edu_plugin_version" : "2021.10-2021.2-627"
}